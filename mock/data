2.2. 2其它需求
（1）数据的安全性
用户需要需要注册后才能进行购买，用户密码会进行两次散列加密，即使在数据库中也无法直接查看用户密码。
（2）系统的可靠性
由于考虑到用户的数量会逐步增加，对系统稳定的要求也大大提高，系统设计成SOA架构，同时搭建Redis集群来对数据进行缓存，来保证系统的可靠性。
（3）系统的可扩充性
编写程序的时候严格服从一定的标准，不同性质的代码分开，获取信息都是从数据库里面获取，使得信息功能都可以通过加入相应的代码进行扩充。
本系统采用前后端分离模式，前端的维护不直接关系到后端，后端的维护也不直接关系到前端，后端是一个聚合工程，架构层次清晰，可拓展性强，前段使用Vue实现，结构清晰明朗，扩充性强。
（4）系统的易用性
本系统为珠宝商城，界面简洁明了，结合珠宝高雅的气质，使界面更加大气化，同时系统简单化了登录注册等操作，购物支付也支持支付宝、微信等主流支付方式，大大简单化用户的操作流程，易用性强。


Gems珠宝商城的运行环境主要包括软件环境和硬件环境。硬件环境包括由计算机和计算机相关的外围设备组成的计算机物理系统，即硬件设施。软件环境是在计算机硬件上运行以驱动计算机及其外围设备以实现系统操作的软件系统。
（1）硬件环境
珠宝商城系统的应用平台主要是用于用户购物，所以系统的访问会更大，考虑到这个用户访问量大的原因，系统的硬件环境配置更为严格。服务器要求CPU：4GHZ以上，最大内网带宽25Gbps以上，内存容量在16G以上，最大网络收发包能力400万PPS以上，由于存在大量的商品，产生的商品信息的数据量巨大，所需要的存储介质容量需求量大，考虑到未来用户的增长以及商品的增加，要求硬盘容量在10T以上。
（2）软件环境
本珠宝商城可在主流的操作系统完成购物，使用IntelliJ Idea作为系统后端开发工具，使用JetBrains WebStorm作为系统前端开发工具，并采用MySQL开源数据库作为系统的数据库对用户信息、商品信息、订单信息等进行存储管理，采用Redis作为系统的缓存，采用多个Tomcat 服务器作为商城系统的Web服务器，使用Nodejs作为前端的服务器。
3.2 基本处理流程
珠宝商城平台系统是面向大量用户购物的系统，因此系统应具有简单的操作处理逻辑，良好的界面，用户可以快速掌握如何使用系统中的大部分功能。用户可以对个人信息、订单信息等进行编辑以及购物一系列操作等。
Gems珠宝商城的基本操作流程图如图3-1所示：


3.3 模块结构
本系统分为四个模块：用户管理模块，商品管理模块，购物车管理模块，订单管理模块。
（1）用户管理模块
该模块允许用户注册、登录、修改密码、编辑个人信息等。其组成模块如图3-2所示：

（2）商品管理模块
该模块主要用于商城主页的展示，包括轮播图、热卖等，以及用户可以点击全部商品，通过条件过滤得到符合条件的商品，点击单个商品可以查看商品详情。其组成模块如图3-3所示：

（3）购物车管理模块
该模块主要是用于用户持久性地存放心仪商品，可以在购物车中编辑商品，包括增加或减少商品数量、删除商品、选择性地提交订单等。其组成模块如图3-4所示：

（4）订单管理模块
该模块主要是提供提交订单功能，查看全部订单，查看订单详情等功能，为用户展示最全面的购物记录。其组成模块如图3-5所示：


系统采用通用的B/S（浏览器、服务器）模式进行设计，如图4-1所示。

数据库结构设计是珠宝商城平台系统设计中非常重要的一部分。 大量用户浏览产品，系统数据存储将会受到很大压力。 因此，设计一个优秀合理的数据库可以提高系统的运行效率。 设计数据库必须保证事务的原子性，一致性，隔离性和持久性。 合理的数据库结构设计不仅可以保证数据的完整性和一致性，提高数据访问效率，而且更有利于系统的高可用性和高并发性。

根据珠宝商城平台系统的需求分析，将用户需求转换为珠宝商城平台系统数据库的概念设计是数据库设计的关键一步。平台系统的数据库采用自下而上的方式对数据库进行数据抽象和结构化设计。其设计过程是：首先使用设计本地应用程序，然后使用本地E-R图设计，最后通过视图集成获得概念模型，即全局E-R图。 E-R图是概念模型设计中使用的典型方法之一。它由模型来表示，其中一个矩形表示一个实体类型并且在其中输入一个实体名称，一个椭圆表示实体的一个属性，并且与没有无向边的箭头相关联。相应的实体类型被链接在一起;菱形表示实体类型之间的链接，并且联系人名称在菱形框中指示，并且与实体类型中没有箭头的非方向边连接，并且在非方向侧上指示联系类型。（1：1,1：n或m：n）。在对珠宝商城平台系统进行全面分析后，E-R图如图4-2所示。

测试方案设计
8.1.1 测试策略
首先，应尽快进行测试，最好是在需求阶段开始干预，因为最严重的错误无非是系统无法满足用户的需求，或者用户体验不好。
其次，在开始测试工作之前，有必要确定正确的测试策略和指导方针，这是后续工作的基础。
第三，测试用例的设计应全面地考虑到合法输入和非法输入以及各种临界、边界条件，而且需要考虑到特殊情况下造成极端条件和意外情况，如网络不稳定、甚至网络中断，断电等。
第四，我们应该充分关注测试过程中的集群现象。
第五，错误结果需要确认过程。在测试用例下能够重现。
第六，制定严格的测试计划。一定要制定一个测试计划，并具有启发性。测试时间表尽可能宽松，并且不要去指望在很短的时间内完成高水平的测试。
第七，应妥善保存测试计划，错误统计，测试用例和最终分析报告，以便维护。
8.1.2 测试进度安排
各个模块的测试安排计划与实施如表8-1所示。

8.1.3 测试资源
（1）人力需求
考虑到本商城系统较为简洁，系统规模较小，功能点覆盖面不是很大，只需要本人测试即可。
（2）测试环境
测试环境没有硬性要求，主流操作系统都行，浏览器要求IE8以上。
8.1.4 关键测试点
（1）用户能否实现登录注册忘记密码等一系列操作。
（2）用户能否浏览商品，查看商品详情。
（3）用户能否将商品添加到购物车，并且在购物车中对购物车中的商品进行编辑。
（4）用户能否提交订单，生成订单后能否确认付款。
（5）用户能否查看历史订单，管理订单。
（6）用户能否在个人中心编辑个人信息等。
8.2 测试用例构建
8.2.1 测试用例编写约定
（1）一个功能正常的过程，编写一个测试用例;
（2）对于功能中的多个异常处理，应该分别编写多个测试用例;
（3）具有不同条目的相同功能，可组合编写测试用例;
（4）对于具有不同数据准备的相同功能，应该分别编写多个测试用例;
8.2.2 测试用例设计
根据商城系统要求分析提出的测试要点，其中包括测试要点，测试步骤，预期结果和测试结果。测试如表8-2所示：
表8-2 测试用例设计表

